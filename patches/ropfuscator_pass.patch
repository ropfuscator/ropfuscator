--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -71,7 +71,7 @@
   X86WinEHState.cpp
   )
 
-add_llvm_target(X86CodeGen ${sources})
+include(ropfuscator/cmake/ropfuscator.cmake)
 
 add_subdirectory(AsmParser)
 add_subdirectory(Disassembler)
--- a/X86TargetMachine.cpp
+++ b/X86TargetMachine.cpp
@@ -61,6 +61,11 @@
                                         "folding pass"),
                                cl::init(false), cl::Hidden);
 
+namespace llvm {
+void initializeX86ROPfuscatorPass(PassRegistry &);
+FunctionPass *createX86ROPfuscatorPass();
+}
+
 extern "C" LLVM_EXTERNAL_VISIBILITY void LLVMInitializeX86Target() {
   // Register the target.
   RegisterTargetMachine<X86TargetMachine> X(getTheX86_32Target());
@@ -83,6 +88,7 @@
   initializeX86FlagsCopyLoweringPassPass(PR);
   initializeX86CondBrFoldingPassPass(PR);
   initializeX86OptimizeLEAPassPass(PR);
+  initializeX86ROPfuscatorPass(PR);
 }
 
 static std::unique_ptr<TargetLoweringObjectFile> createTLOF(const Triple &TT) {
@@ -519,6 +525,7 @@
   }
   addPass(createX86DiscriminateMemOpsPass());
   addPass(createX86InsertPrefetchPass());
+  addPass(createX86ROPfuscatorPass());
 }
 
 void X86PassConfig::addPreEmitPass2() {
